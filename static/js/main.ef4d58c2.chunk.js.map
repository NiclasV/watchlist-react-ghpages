{"version":3,"sources":["images/logo.png","images/footer_logo.png","images/netflixbg2.jpg","images/bgprofile.jpg","components/navigation/subcomp/Facebook.js","components/navigation/subcomp/Login.js","components/navigation/subcomp/Logo.js","components/navigation/subcomp/Menu.js","components/navigation/Navigation.js","components/footer/Footer.js","styles/search.js","components/search/subcomp/Textfield.js","components/search/Search.js","components/watchlists/subcomp/CreateListButton.js","components/dialogs/CreateListDialog.js","components/watchlists/subcomp/Header.js","components/watchlists/subcomp/HrTitles.js","components/menu/Menu.js","components/watchlists/subcomp/Avatar.js","components/watchlists/subcomp/MovieItem.js","components/buttons/SeeListBtn.js","components/watchlists/subcomp/Watchlist.js","components/buttons/buttonOutline.js","components/watchlists/Watchlists.js","components/recommended/subcomp/RecTitle.js","components/recommended/Recommended.js","components/searchresults/subcomp/MovieCard.js","components/searchresults/subcomp/AddToListBtn.js","components/dialogs/AddToListDialog.js","components/searchresults/subcomp/MovieCardFull.js","components/searchresults/Searchresults.js","components/StartPage.js","components/profilepage/Avatar.js","components/profilepage/ProfileImage.js","components/profilepage/ProfileCard.js","components/ProfilePage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Facebook","state","anchorEl","handleChange","event","_this","setState","auth","target","checked","handleMenu","currentTarget","handleClose","fbContent","this","open","Boolean","props","user","isLoggedIn","react_default","a","createElement","IconButton_default","aria-owns","undefined","aria-haspopup","onClick","color","AccountCircle_default","fontSize","Menu_default","id","anchorOrigin","vertical","horizontal","transformOrigin","onClose","MenuItem_default","href","facebook_login_with_button_default","appId","autoLoad","textButton","fields","componentClicked","callback","responseFacebook","icon","size","className","Component","withStyles","root","flexGrow","grow","menuButton","marginLeft","marginRight","Login","subcomp_Facebook","Logo","src","mainLogo","alt","Menu","handleClick","aria-label","icons_Menu_default","Navigation","subcomp_Menu","subcomp_Logo","subcomp_Login","Footer","FooterLogo","rel","div","styled","_templateObject","primary","css","_templateObject2","bgImage","profile","_templateObject3","bgProfile","OutlinedTextFields","handleSearch","value","startsWith","getTitle","getMovies","_this2","classes","container","noValidate","autoComplete","TextField_default","InputProps","input","multilineColor","notchedOutline","focusedField","focused","InputLabelProps","focusedLabel","label","textField","onChange","onKeyPress","ev","key","preventDefault","searchvalue","margin","variant","theme","display","flexWrap","justifyContent","padding","spacing","unit","width","marginTop","dense","border","fontWeight","borderWidth","borderColor","Search","search","Textfield","movieSearch","CreateListButton","Button_default","handleClickOpen","CreateListDialog","handleCreate","userID","createList","getWatchlists","Dialog_default","isopen","aria-labelledby","DialogTitle_default","DialogContent_default","DialogContentText_default","autoFocus","type","fullWidth","DialogActions_default","header","marginBottom","Header","generateHeader","watchlistType","style","Typography_default","align","CreateListButton_CreateListButton","CreateListDialog_CreateListDialog","HrTitles","titles","VertMenu","deleteList","watchlistid","React","avatar","height","bigAvatar","zIndex","boxShadow","alignSelf","textAlign","Avatar_default","poster","MovieItem","trimtitle","title","movie","movietitle","length","substring","trimgenre","genre","handleDelete","imdbid","data","window","confirm","fetch","method","mode","body","JSON","stringify","then","response","catch","error","console","subcomp_Avatar","DeleteOutlineOutlined_default","button","buttonColor","buttonSize","fullWatchlist","buttonText","Watchlist","log","page","switchWatchlistType","handleTitles","movies","slice","map","subcomp_MovieItem","handleButton","buttons_SeeListBtn","checkLogIn","Card_default","raised","CardHeader_default","action","MoreVert_default","subheader","description","titleTypographyProps","subheaderTypographyProps","menu_Menu","subcomp_HrTitles","CardContent_default","Watchlists","generateAllWatchlistsBtn","buttonOutline","watchlists","Watchlist_Watchlist","reverse","watchlist","activeWatchlist","index","findIndex","element","i","class","Header_Header","buildWatchlist","RecTitle","trimPlot","plot","recommendedTitle","stylee","backgroundImage","year","genres","Recommended","buildTitles","recommendedTitles","first","second","RecTitle_RecTitle","card","maxWidth","media","CardActionArea_default","goSingleMovie","imdbID","CardMedia_default","image","handlePoster","gutterBottom","component","AddToListButton","saveMovieToDatabase","Title","Year","Rated","Released","Runtime","Genre","Director","Writer","Actors","Plot","Language","Country","Awards","Poster","Ratings","Metascore","imdbRating","imdbVotes","Type","DVD","BoxOffice","Production","Website","AddToListDialog","listid","saveMovieToList","select","SelectProps","native","MenuProps","helperText","selectedWatchlist","MovieCard","AddToListBtn_AddToListButton","AddToListDialog_AddToListDialog","Searchresults","content","singleMovie","searchResults","subcomp_MovieCard","MovieCardFull","contentBuild","StartPage","searchresults_Searchresults","search_Search","checkSearch","watchlists_Watchlists","userInfo","Recommended_Recommended","getRecommended","Grid_default","justify","alignItems","userName","userPic","ProfileImage","profilepage_Avatar","picture","name","bullet","transform","lineHeight","pos","info","bold","lists","ProfilePage","profilepage_ProfileImage","profilepage_ProfileCard","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","fullwatchlist","defineProperty","listname","listdescription","email","url","baseUrl","json","Response","totalResults","rated","released","runtime","director","writer","actors","language","country","awards","ratings","metascore","imdbrating","imdbvotes","dvd","boxoffice","production","website","trailer","damovie","userid","setTimeout","recommended","componentDidMount","created","selectedwatchlist","navigation_Navigation","BrowserRouter","Route","path","render","components_StartPage","assign","exact","components_ProfilePage","footer_Footer","location","hostname","match","defaultTheme","createMuiTheme","palette","blue","secondary","green","typography","useNextVariants","breakpoints","objectSpread","overrides","MuiTypography","h1","down","h2","ReactDOM","styles","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ef4d58c2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.0af76bfe.png\";","module.exports = __webpack_public_path__ + \"static/media/footer_logo.b3ffcfc9.png\";","module.exports = __webpack_public_path__ + \"static/media/netflixbg2.571fe20b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bgprofile.ba54219c.jpg\";","import React, { Component } from 'react';\r\nimport FacebookLogin from 'react-facebook-login';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport PropTypes from 'prop-types';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = {\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    grow: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginLeft: -12,\r\n      marginRight: 20,\r\n    },\r\n  };\r\n\r\n  \r\nclass Facebook extends Component {\r\n    state = {\r\n        anchorEl: null,\r\n    };\r\n\r\n    handleChange = event => {\r\n        this.setState({ auth: event.target.checked });\r\n    };\r\n    \r\n    handleMenu = event => {\r\n        this.setState({ anchorEl: event.currentTarget });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ anchorEl: null });\r\n    };\r\n    \r\n    render() {\r\n        \r\n        let fbContent;\r\n        const { anchorEl } = this.state;\r\n        const open = Boolean(anchorEl);\r\n        \r\n\r\n        if(this.props.user.isLoggedIn === true) {\r\n            fbContent = (\r\n                <div>\r\n                    <IconButton\r\n                        aria-owns={open ? 'menu-appbar' : undefined}\r\n                        aria-haspopup=\"true\"\r\n                        onClick={this.handleMenu}\r\n                        color=\"inherit\"\r\n                    >\r\n                        <AccountCircle \r\n                            fontSize=\"large\"\r\n                        />\r\n                    </IconButton>\r\n\r\n                    <Menu\r\n                        id=\"menu-appbar\"\r\n                        anchorEl={anchorEl}\r\n                        anchorOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'right',\r\n                        }}\r\n                        transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'right',\r\n                        }}\r\n                        open={open}\r\n                        onClose={this.handleClose}\r\n                    >\r\n                        <MenuItem onClick={this.handleClose}><a href=\"/ProfilePage\">My profile</a></MenuItem>\r\n                    </Menu>\r\n\r\n              </div>\r\n            ); \r\n        } else {\r\n            fbContent = (\r\n                <FacebookLogin\r\n                    appId=\"2007701916194555\"\r\n                    autoLoad={true}\r\n                    textButton=\" Login\"\r\n                    fields=\"name,email,picture.type(large)\"\r\n                    onClick={this.props.componentClicked}\r\n                    callback={this.props.responseFacebook} \r\n                    icon=\"fa-facebook\"\r\n                    size=\"small\"\r\n                />\r\n            );\r\n        };\r\n\r\n        return (\r\n            <div className=\"navItem\">\r\n                {fbContent}\r\n            </div> \r\n        );  \r\n    }\r\n}\r\n\r\nFacebook.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n  \r\nexport default withStyles(styles)(Facebook);","import React, { Component } from 'react';\r\nimport Facebook from './Facebook';\r\n\r\nclass Login extends Component {\r\n\r\n  render() {\r\n    return (\r\n        <div className=\"navItem\">\r\n            <Facebook\r\n              responseFacebook={this.props.responseFacebook}\r\n              componentClicked={this.props.componentClicked}\r\n              user={this.props.user}\r\n            />\r\n        </div>\r\n    );  \r\n  }\r\n\r\n}\r\n\r\n\r\nexport default Login;","import React, { Component } from 'react';\r\nimport mainLogo from '../../../images/logo.png'\r\n\r\nclass Logo extends Component {\r\n\r\n  render() {\r\n    return (\r\n        <div className=\"navItem__logo navItem\">\r\n            <div className=\"nav__logo\">\r\n                <a href=\"/\"><img src={mainLogo} className=\"img-fluid\" alt=\"logotype\"/></a>\r\n            </div>\r\n        </div>\r\n    );  \r\n  }\r\n\r\n}\r\n\r\nexport default Logo;","import React, { Component } from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nclass Menu extends Component {\r\n\r\n  render() {\r\n    return (\r\n      \r\n        <div className=\"navItem\">\r\n          <IconButton \r\n            onClick={this.handleClick}\r\n            color=\"inherit\" \r\n            aria-label=\"Menu\">\r\n            <MenuIcon fontSize=\"large\" />\r\n          </IconButton>\r\n        </div>\r\n    );  \r\n  }\r\n\r\n}\r\n\r\n\r\nexport default Menu;","import React, { Component } from 'react';\r\nimport Login from './subcomp/Login';\r\nimport Logo from './subcomp/Logo';\r\nimport Menu from './subcomp/Menu';\r\n\r\nclass Navigation extends Component {\r\n\r\n  render() {\r\n    return (\r\n        <div className=\"nav\">\r\n            <Menu/>\r\n            <Logo/>\r\n            <Login\r\n              responseFacebook={this.props.responseFacebook}\r\n              componentClicked={this.props.componentClicked}\r\n              user={this.props.user}\r\n            />\r\n        </div>\r\n    );  \r\n  }\r\n\r\n}\r\n\r\n\r\nexport default Navigation;","import React, { Component } from 'react';\r\nimport FooterLogo from '../../images/footer_logo.png';\r\nimport '../../css/App.css';\r\n\r\nclass Footer extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <footer>\r\n        <img src={FooterLogo} alt=\"Watchlist-logo\" className=\"foot__logo\"/>\r\n        <div className=\"foot__text\">\r\n            <span className=\"greytext\">\r\n                A project by </span><span className=\"whitetext bold\"><a href=\"http://github.com/niclasv\" target=\"_blank\" rel=\"noopener noreferrer\"><i className=\"fab fa-github-square\"></i> Niclas Victorsson</a><br/></span>\r\n                <span className=\"greytext\">Made with React, Material-ui & OMDB API</span><br/>\r\n                <span className=\"whitetext\"><a href=\"http://obbyone.com\" target=\"_blank\" rel=\"noopener noreferrer\">www.obbyone.com</a>\r\n            </span>\r\n        </div>\r\n      </footer>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default Footer;\r\n","import styled, { css } from 'styled-components';\r\nimport bgImage from '../images/netflixbg2.jpg';\r\nimport bgProfile from '../images/bgprofile.jpg';\r\n\r\nconst div = styled.div `\r\n    min-height: 300px;\r\n    background-size: 100%;\r\n    background-position: center;\r\n    border-bottom: 7px solid #2196f3;\r\n    ${props =>\r\n        props.primary &&\r\n        css`\r\n            background-image: url(${bgImage});\r\n    `\r\n    };\r\n    ${props =>\r\n        props.profile &&\r\n        css`\r\n            background-image: url(${bgProfile});\r\n            z-index: -100;\r\n            background-size: cover;\r\n            background-position: top;\r\n        ` \r\n    };\r\n`;\r\n\r\nexport default div;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst styles = theme => ({\r\n  container: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: \"center\",\r\n    padding: \"10px\"\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing.unit,\r\n    marginRight: theme.spacing.unit,\r\n    width: \"400px\",\r\n    marginTop: \"120px\",\r\n    color: \"#FFF\"\r\n  },\r\n  dense: {\r\n    marginTop: 16,\r\n  },\r\n  multilineColor:{\r\n    color:'white',\r\n    border: 'white',\r\n    fontWeight: \"400\",\r\n  },\r\n  focusedField: {\r\n    borderWidth: \"1px\",\r\n    borderColor: \"#2196f3 !important\"\r\n  },\r\n  focusedLabel: {\r\n    color: \"#2196f3 !important\"\r\n  },\r\n});\r\n\r\n\r\n\r\nclass OutlinedTextFields extends Component {\r\n\r\n  handleSearch = (value) => {\r\n\r\n    if(value.startsWith(\"tt\")) {\r\n        this.props.getTitle(value);\r\n    } else {\r\n        this.props.getMovies(value);\r\n    }\r\n\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <form className={classes.container} noValidate autoComplete=\"off\">\r\n        <TextField\r\n            InputProps={{\r\n                classes: {\r\n                input: classes.multilineColor,\r\n                notchedOutline: classes.focusedField,\r\n                focused: classes.focusedField\r\n                },\r\n            }}\r\n            InputLabelProps={{\r\n                classes: {\r\n                root: classes.focusedLabel,\r\n                notchedOutline: classes.focusedField\r\n                },\r\n            }}\r\n            id=\"outlined-name\"\r\n            label=\"SEARCH FOR MOVIE OR SERIES\"\r\n            className={classes.textField}\r\n            onChange={this.props.handleChange('searchvalue')}\r\n            onKeyPress={(ev) => {\r\n              if (ev.key === 'Enter') {\r\n                ev.preventDefault();\r\n                //this.props.getMovies(this.props.searchvalue)\r\n                  this.handleSearch(this.props.searchvalue);\r\n              }\r\n            }}\r\n            margin=\"normal\"\r\n            variant=\"outlined\"\r\n        />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nOutlinedTextFields.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(OutlinedTextFields);","import React, { Component } from 'react';\r\nimport Div from '../../styles/search';\r\nimport OutlinedTextFields from './subcomp/Textfield';\r\n\r\nclass Search extends Component {\r\n\r\n  render() {\r\n    return (\r\n        <Div primary>\r\n            <OutlinedTextFields \r\n              handleChange={this.props.handleChange}\r\n              movieSearch={this.props.movieSearch}\r\n              searchvalue={this.props.searchvalue}\r\n              getMovies={this.props.getMovies}\r\n              getTitle={this.props.getTitle}\r\n            />\r\n        </Div>\r\n    );  \r\n  }\r\n\r\n}\r\n\r\n\r\nexport default Search;","import React, { Component } from 'react';\r\nimport '../../../css/App.css';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default class CreateListButton extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <Button \r\n                variant=\"contained\" \r\n                color=\"primary\" \r\n                size=\"large\"\r\n                onClick={this.props.handleClickOpen}\r\n            >\r\n                create new list\r\n            </Button>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport '../../css/App.css';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nexport default class CreateListDialog extends Component {\r\n\r\n    handleCreate = (userID) => {\r\n        this.props.createList();\r\n        this.props.handleClose();\r\n        this.props.getWatchlists(userID)\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Dialog\r\n                open={this.props.isopen}\r\n                onClose={this.props.handleClose}\r\n                aria-labelledby=\"form-dialog-title\"\r\n                >\r\n                <DialogTitle id=\"form-dialog-title\">Create new Watchlist</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        Add a name and description for your new list\r\n                    </DialogContentText>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"normal\"\r\n                        id=\"name\"\r\n                        label=\"Name of the list\"\r\n                        type=\"name\"\r\n                        fullWidth\r\n                        onChange={this.props.handleChange('listname')}\r\n                    />\r\n                    <TextField\r\n                        margin=\"normal\"\r\n                        id=\"description\"\r\n                        label=\"Description\"\r\n                        type=\"description\"\r\n                        fullWidth\r\n                        onChange={this.props.handleChange('listdescription')}\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.props.handleClose} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={ () => this.handleCreate(this.props.userID)} color=\"primary\" variant=\"contained\">\r\n                        Create list\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport '../../../css/App.css';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CreateListButton from './CreateListButton';\r\nimport CreateListDialog from '../../dialogs/CreateListDialog';\r\n\r\nconst header = {\r\n    display: \"flex\",\r\n    flexWrap: \"no-wrap\",\r\n    justifyContent: \"space-between\",\r\n    marginBottom: \"35px\",\r\n    marginTop: \"35px\",\r\n}\r\n\r\nexport default class Header extends Component {\r\n\r\n    generateHeader = () => {\r\n        if(this.props.watchlistType === \"startpage\") {\r\n            return \"Latest Watchlist\"\r\n        } else if (this.props.watchlistType === \"profilepage\") {\r\n            return \"Your Watchlists\"\r\n        } else {\r\n            return \"Watchlist\"\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={header}>\r\n                <Typography variant=\"h1\" align=\"left\">\r\n                    {this.generateHeader()}\r\n                </Typography>\r\n                <CreateListButton \r\n                    handleClickOpen={this.props.handleClickOpen}\r\n                />\r\n                <CreateListDialog\r\n                    getWatchlists={this.props.getWatchlists}\r\n                    isopen={this.props.isopen}\r\n                    handleClose={this.props.handleClose}\r\n                    handleChange={this.props.handleChange}\r\n                    createList={this.props.createList}\r\n                    userID={this.props.userID}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nclass HrTitles extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"strike\">\r\n                <span>{this.props.titles} titles in list</span>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HrTitles;","import React from 'react';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nclass VertMenu extends React.Component {\r\n\r\n  render() {\r\n    const { anchorEl } = this.props.anchorEl;\r\n\r\n    return (\r\n      <div>\r\n        <Menu\r\n          id=\"simple-menu\"\r\n          anchorEl={anchorEl}\r\n          open={Boolean(anchorEl)}\r\n          onClose={this.props.handleClose}\r\n        >\r\n          \r\n          <MenuItem onClick={() => this.props.deleteList(this.props.watchlistid)}>Delete list</MenuItem>\r\n        </Menu>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default VertMenu;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nconst styles = {\r\n  avatar: {\r\n    width: 50,\r\n    height: 50,\r\n  },\r\n  bigAvatar: {\r\n    margin: 10,\r\n    width: 320,\r\n    height: 320,\r\n    border: \"10px solid #FFF\",\r\n    marginTop: \"-230px\",\r\n    zIndex: 100,\r\n    boxShadow: \"2px 2px 5px 0px rgba(0,0,0,0.43)\",\r\n    alignSelf: \"center\",\r\n    textAlign: \"center\"\r\n  }\r\n\r\n};\r\n\r\nfunction ImageAvatars(props) {\r\n  const { classes } = props;\r\n  return (\r\n    <div>\r\n      <Avatar alt={props.alt} src={props.poster}className={classes.avatar} />\r\n    </div>\r\n  );\r\n}\r\n\r\nImageAvatars.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  poster: PropTypes.string.isRequired,\r\n  alt: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(ImageAvatars);","import React, { Component } from 'react';\r\nimport Avatar from './Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteOutlineOutlined from '@material-ui/icons/DeleteOutlineOutlined'\r\n\r\nclass MovieItem extends Component {\r\n\r\n    trimtitle = (props) => {\r\n        let title = this.props.movie.movietitle;\r\n        if (title.length > 30) {\r\n            title = title.substring(0, 30) + \"...\";\r\n        }\r\n\r\n        return title;\r\n    }\r\n\r\n    trimgenre = (props) => {\r\n        let genre = this.props.movie.genre;\r\n        if (genre.length > 48) {\r\n            genre = genre.substring(0, 48) + \"...\";\r\n        }\r\n\r\n        return genre;\r\n    }\r\n\r\n    handleDelete = (id, imdbid) => {\r\n\r\n        let data = {\r\n            watchlistid: id,\r\n            imdbid: imdbid\r\n          }\r\n        if (window.confirm('You sure you wanna remove this title from the list?')) {\r\n\r\n            return fetch('http://localhost/php/deletemoviefromlist.php', {\r\n            method: \"POST\",\r\n            mode: \"no-cors\",\r\n            body: JSON.stringify(data)\r\n            })\r\n            .then((response) => {\r\n                this.props.getWatchlists(this.props.userID);\r\n            })\r\n            .catch((error) => {\r\n                console.error(error);\r\n            })\r\n        }      \r\n    }\r\n\r\n    render() {\r\n        return (\r\n                <div className=\"movieitem\">\r\n                    <div className=\"movieitem-avatar\">\r\n                        <Avatar \r\n                            poster={this.props.movie.poster}\r\n                            alt={this.props.movie.movietitle}\r\n                        />\r\n                    </div>\r\n                    <div className=\"movieitem-info\">\r\n                        <div className=\"movieitem-text\">\r\n                            <p>{this.trimtitle()}</p>\r\n                            <span>{this.trimgenre()}</span>\r\n                        </div>\r\n                        <div className=\"movieitem-button\">\r\n                            <IconButton\r\n                                //aria-owns={anchorEl ? 'simple-menu' : undefined}\r\n                                //aria-haspopup=\"true\"\r\n                                onClick={() => this.handleDelete(this.props.movie.id, this.props.movie.imdbid)}\r\n                            >\r\n                                <DeleteOutlineOutlined />\r\n                            </IconButton>\r\n                        </div>\r\n                    </div>\r\n                    <hr/>\r\n                </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MovieItem;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst styles = theme => ({\r\n  button: {\r\n    margin: theme.spacing.unit,\r\n    marginTop: 20,\r\n    marginBottom: 20,\r\n  },\r\n});\r\n\r\nfunction SeeListBtn(props) {\r\n  const { classes } = props;\r\n  return (\r\n        <Button \r\n            variant=\"outlined\" \r\n            color={props.buttonColor}\r\n            className={classes.button}\r\n            size={props.buttonSize}\r\n            onClick={ () => props.fullWatchlist(\"single\", props.watchlistid)}\r\n        >\r\n        {props.buttonText}\r\n      </Button>\r\n  );\r\n}\r\n\r\nSeeListBtn.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  buttonText: PropTypes.string.isRequired,\r\n  buttonSize: PropTypes.string.isRequired,\r\n  buttonColor: PropTypes.string.isRequired,\r\n  fullWatchlist: PropTypes.func,\r\n  watchlistid: PropTypes.string\r\n};\r\n\r\nexport default withStyles(styles)(SeeListBtn);","import React, { Component } from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport HrTitles from './HrTitles';\r\nimport VertMenu from '../../menu/Menu';\r\nimport MovieItem from './MovieItem';\r\nimport SeeListBtn from '../../buttons/SeeListBtn';\r\n\r\nexport default class Watchlist extends Component {\r\n    state = {\r\n        anchorEl: null,\r\n    };\r\n\r\n    handleClick = event => {\r\n        this.setState({ anchorEl: event.currentTarget });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ anchorEl: null });\r\n    };\r\n    \r\n    deleteList = (id) => {\r\n        console.log('Deleting' + this.props.watchlistid)\r\n\r\n        if (window.confirm('Are you sure you want to delete this list?')) {\r\n            let data = {\r\n                id: id,\r\n            }\r\n\r\n        return fetch('http://localhost/php/deletelist.php', {\r\n            method: \"POST\",\r\n            mode: \"no-cors\",\r\n            body: JSON.stringify(data)\r\n            })\r\n            .then((response) => {\r\n              this.props.getWatchlists(this.props.userID)\r\n            })\r\n            .catch((error) => {\r\n              console.error(error);\r\n          })       \r\n        }\r\n    }\r\n\r\n    fullWatchlist = (page, watchlistid) => {\r\n        this.props.fullWatchlist(watchlistid)\r\n        this.props.switchWatchlistType(page)\r\n    }\r\n\r\n    handleTitles = () => {\r\n        console.log(this.props.watchlistType)\r\n        if(this.props.watchlistType === \"profilepage\" || this.props.watchlistType === \"startpage\") {\r\n            return (\r\n                this.props.movies.slice(0, 8).map((movie) =>\r\n                    <MovieItem\r\n                        movie={movie}\r\n                        key={movie.imdbid}\r\n                        getWatchlists={this.props.getWatchlists}\r\n                        userID={this.props.userID}\r\n                    />     \r\n                )\r\n            );\r\n\r\n        } else if (this.props.watchlistType === \"single\") {\r\n            return (\r\n                    this.props.movies.map((movie) =>\r\n                    <MovieItem\r\n                        movie={movie}\r\n                        key={movie.imdbid}\r\n                        getWatchlists={this.props.getWatchlists}\r\n                        userID={this.props.userID}\r\n                    />     \r\n                )\r\n            );\r\n        }\r\n    }\r\n\r\n    handleButton = () => {\r\n        if(this.props.movies.length > 8 && this.props.watchlistType !== \"single\") {\r\n            return (\r\n                <SeeListBtn\r\n                    buttonText=\"See full list\"\r\n                    buttonSize=\"large\"\r\n                    buttonColor=\"primary\"\r\n                    fullWatchlist={this.fullWatchlist}\r\n                    watchlistid={this.props.watchlistid}\r\n                />\r\n            );\r\n        } else {\r\n            return \"\";\r\n        }\r\n    }\r\n    \r\n    checkLogIn = () => {\r\n            if(this.props.isLoggedIn === \"false\") {\r\n                return (<h2>Log in to add movies to list</h2>);\r\n            } else {\r\n                return \"\"\r\n            }\r\n            \r\n\r\n    }\r\n\r\n    render() {\r\n        const { anchorEl } = this.state;\r\n\r\n        return(\r\n            <div className=\"watchlist\">\r\n                <Card raised={true}>\r\n                    <CardHeader \r\n                        action={\r\n                            <IconButton\r\n                                aria-owns={anchorEl ? 'simple-menu' : undefined}\r\n                                aria-haspopup=\"true\"\r\n                                onClick={this.handleClick}\r\n                            >\r\n                                <MoreVertIcon />\r\n                            </IconButton>\r\n                        }\r\n                        title={this.props.title}\r\n                        subheader={this.props.description}\r\n                        titleTypographyProps={{align:\"left\"}}\r\n                        subheaderTypographyProps={{align:\"left\"}}\r\n                    /> \r\n                    <VertMenu\r\n                        anchorEl={this.state}\r\n                        handleClose={this.handleClose}\r\n                        deleteList={this.deleteList}\r\n                        watchlistid={this.props.watchlistid}\r\n                    />\r\n                    <HrTitles\r\n                        titles={this.props.movies.length}\r\n                    />\r\n                    <CardContent>\r\n                    {this.checkLogIn()}\r\n                    <div className=\"movies-container\">\r\n                        {this.handleTitles()}\r\n                    </div> \r\n                    </CardContent>\r\n                        {this.handleButton()}\r\n                        \r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst styles = theme => ({\r\n  button: {\r\n    margin: theme.spacing.unit,\r\n    marginTop: 20,\r\n    marginBottom: 20,\r\n  },\r\n});\r\n\r\nfunction OutlinedButton(props) {\r\n  const { classes } = props;\r\n  return (\r\n        <Button \r\n            variant=\"outlined\" \r\n            color={props.buttonColor}\r\n            className={classes.button}\r\n            size={props.buttonSize}\r\n            href={props.href}\r\n        >\r\n        {props.buttonText}\r\n      </Button>\r\n  );\r\n}\r\n\r\nOutlinedButton.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  buttonText: PropTypes.string.isRequired,\r\n  buttonSize: PropTypes.string.isRequired,\r\n  buttonColor: PropTypes.string.isRequired,\r\n  href: PropTypes.string\r\n};\r\n\r\nexport default withStyles(styles)(OutlinedButton);","import React, { Component } from 'react';\r\nimport '../../css/App.css';\r\nimport Header from './subcomp/Header';\r\nimport Watchlist from './subcomp/Watchlist';\r\nimport OutlinedButton from '../buttons/buttonOutline';\r\n\r\nclass Watchlists extends Component {\r\n    state = {\r\n        open: false,\r\n\r\n    };\r\n\r\n    handleClickOpen = () => {\r\n        this.setState({ open: true });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ open: false });\r\n    };\r\n\r\n    generateAllWatchlistsBtn = () => {\r\n        if (this.props.watchlistType === \"startpage\" && this.props.isLoggedIn === true) {\r\n                return (\r\n                    <OutlinedButton\r\n                        buttonText=\"See all lists\"\r\n                        buttonSize=\"large\"\r\n                        buttonColor=\"primary\"\r\n                        href=\"/Profilepage\"\r\n                    /> \r\n                );\r\n        }\r\n    }\r\n    buildWatchlist() {\r\n        var content = '';\r\n\r\n        if(this.props.watchlists === null) {\r\n            content = <Watchlist title=\"loading\" description=\"loading\" />;\r\n             \r\n            return content;\r\n        } else if (this.props.watchlistType === \"profilepage\") {\r\n            content = this.props.watchlists.slice(0).reverse().map((watchlist) => \r\n            <Watchlist\r\n                key={watchlist.id + 1}\r\n                watchlistid={watchlist.id}\r\n                title={watchlist.title}\r\n                description={watchlist.description}\r\n                getWatchlists={this.props.getWatchlists}\r\n                userID={this.props.userID}\r\n                movies={watchlist.movies}\r\n                switchWatchlistType={this.props.switchWatchlistType}\r\n                fullWatchlist={this.props.fullWatchlist}\r\n                watchlistType={this.props.watchlistType}\r\n                isLoggedIn={this.props.isLoggedIn}\r\n                \r\n            />\r\n            \r\n        );\r\n\r\n        return content;\r\n\r\n        } else if (this.props.watchlistType === \"single\") {\r\n            var watchlistid = this.props.activeWatchlist; \r\n            var index = this.props.watchlists.findIndex(function(element){return element.id === watchlistid});\r\n\r\n            content =  <Watchlist\r\n                            title={this.props.watchlists[index].title} \r\n                            description={this.props.watchlists[index].description} \r\n                            //getWatchlists={this.props.getWatchlists}\r\n                            userID={this.props.userID}\r\n                            watchlistid={this.props.watchlists[index].id}                \r\n                            movies={this.props.watchlists[index].movies}\r\n                            watchlistType={this.props.watchlistType}\r\n                            isLoggedIn={this.props.isLoggedIn}\r\n                        />;\r\n\r\n            return content;\r\n        \r\n        } else {\r\n            let i = this.props.watchlists.length - 1; \r\n\r\n            content = <Watchlist \r\n                            title={this.props.watchlists[i].title} \r\n                            description={this.props.watchlists[i].description} \r\n                            getWatchlists={this.props.getWatchlists}\r\n                            userID={this.props.userID}\r\n                            watchlistid={this.props.watchlists[i].id}                \r\n                            movies={this.props.watchlists[i].movies}\r\n                            watchlistType={this.props.watchlistType}\r\n                            isLoggedIn={this.props.isLoggedIn}\r\n                        />;\r\n\r\n            return content;\r\n        }\r\n    }\r\n\r\n    render() {\r\n            return (\r\n                <div class=\"content\">\r\n                    <Header\r\n                        handleChange={this.props.handleChange}\r\n                        createList={this.props.createList}\r\n                        handleClickOpen={this.handleClickOpen}\r\n                        isopen={this.state.open}\r\n                        handleClose={this.handleClose}\r\n                        getWatchlists={this.props.getWatchlists}\r\n                        userID={this.props.userID}\r\n                        watchlistType={this.props.watchlistType}\r\n                    />\r\n                    {this.buildWatchlist()}\r\n                    {this.generateAllWatchlistsBtn()}\r\n                </div>\r\n            );\r\n    }\r\n}\r\n\r\nexport default Watchlists;\r\n","import React, { Component } from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nexport default class RecTitle extends Component {\r\n    trimPlot = (props) => {\r\n        let plot = this.props.recommendedTitle.plot;\r\n        if (plot.length > 150) {\r\n            plot = plot.substring(0, 150) + \"...\";\r\n        }\r\n\r\n        return plot;\r\n    }\r\n\r\n    render() {\r\n        \r\n        var stylee = {\r\n            backgroundImage: 'url(' + this.props.recommendedTitle.poster + ')'\r\n        }\r\n\r\n        return(\r\n            <div className=\"recTitle\">\r\n                <div className=\"recTitle__poster\" style={stylee}>\r\n                </div>\r\n                <Typography color=\"secondary\" variant=\"h4\">\r\n                {this.props.recommendedTitle.movietitle}\r\n                </Typography>\r\n                <p className=\"recTitle__year\">{this.props.recommendedTitle.year}</p>\r\n                <p className=\"recTitle__genres\">{this.props.recommendedTitle.genres}</p> \r\n                {this.trimPlot()}\r\n            </div>\r\n        );\r\n\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport '../../css/App.css';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport OutlinedButton from '../buttons/buttonOutline';\r\nimport RecTitle from './subcomp/RecTitle';\r\n\r\nexport default class Recommended extends Component {\r\n    \r\n    buildTitles = () => {\r\n        if(this.props.recommendedTitles) {\r\n            var first = this.props.recommendedTitles.length - 1;\r\n            var second = this.props.recommendedTitles.length - 2;\r\n\r\n            return (\r\n                <div className=\"flexboxrec\">\r\n                    {/* {console.log(this.props.recommendedTitles[second])} */}\r\n                <RecTitle \r\n                    recommendedTitle={this.props.recommendedTitles[first]}\r\n                />\r\n                <RecTitle\r\n                    recommendedTitle={this.props.recommendedTitles[second]}\r\n                />\r\n                </div>\r\n            );\r\n        } \r\n    }\r\n    render() {\r\n        return(\r\n            <div>\r\n                <div className=\"background\"> \r\n                        <Typography variant=\"h1\" color=\"inherit\" align=\"left\">\r\n                            We recommend\r\n                        </Typography>\r\n                        {this.buildTitles()}\r\n                </div>\r\n                    <OutlinedButton \r\n                    buttonColor=\"secondary\"\r\n                    buttonSize=\"large\"\r\n                    buttonText=\"More recommendations\"\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst styles = {\r\n  card: {\r\n    maxWidth: 280,\r\n    marginTop: 15,\r\n    marginBottom: 15,\r\n    margin: \"0 auto\"\r\n  },\r\n  media: {\r\n    height: 240,\r\n    width: 300\r\n  },\r\n};\r\n\r\nfunction MovieCard(props) {\r\n  const { classes } = props;\r\n  \r\n  return (\r\n    <Card className={classes.card} raised={true}\r\n  \r\n    >\r\n      <CardActionArea\r\n       onClick={() => props.goSingleMovie(props.imdbID)}\r\n      >\r\n        <CardMedia\r\n          className={classes.media}\r\n          image={props.handlePoster(props.poster)}\r\n          title={props.title}\r\n        />\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            {props.title} ({props.year})\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n    </Card>\r\n  );\r\n}\r\n\r\nMovieCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  poster: PropTypes.string.isRequired,\r\n  year: PropTypes.string.isRequired,\r\n  imdbID: PropTypes.string.isRequired,\r\n  goSingleMovie: PropTypes.func.isRequired,\r\n  handlePoster: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(MovieCard);","import React, { Component } from 'react';\r\nimport '../../../css/App.css';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default class AddToListButton extends Component {\r\n\r\n    handleClick = (movie) => {\r\n        this.props.handleClickOpen()\r\n        this.props.saveMovieToDatabase(movie.imdbID, movie.Title, movie.Year, movie.Rated, movie.Released, movie.Runtime, movie.Genre, movie.Director, movie.Writer, movie.Actors, movie.Plot, movie.Language, movie.Country, \r\n        movie.Awards, movie.Poster, movie.Ratings, movie.Metascore, movie.imdbRating, movie.imdbVotes, movie.Type, movie.DVD, movie.BoxOffice, movie.Production, movie.Website, \"N/A\");\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Button \r\n                variant={this.props.variant}\r\n                color={this.props.color} \r\n                size={this.props.size}\r\n                onClick={() => this.handleClick(this.props.movie)}\r\n            >\r\n                + Add to list\r\n            </Button>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport '../../css/App.css';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nexport default class AddToListDialog extends Component {\r\n\r\n    handleCreate = (listid, imdbid) => {\r\n        this.props.saveMovieToList(listid, imdbid);\r\n        this.props.handleClose();\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Dialog\r\n                open={this.props.isopen}\r\n                onClose={this.props.handleClose}\r\n                aria-labelledby=\"form-dialog-title\"\r\n                >\r\n                <DialogTitle id=\"form-dialog-title\">Add movie to Watchlist</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        Select the watchlist in which you want the movie\r\n                    </DialogContentText>\r\n                    <TextField\r\n                        id=\"watchlists-selector\"\r\n                        select\r\n                        label=\"Watchlists\"\r\n                        className=\"\"\r\n                        onChange={this.props.handleChange('selectedwatchlist')}\r\n                        SelectProps={{\r\n                            native: true,\r\n                            MenuProps: {\r\n                            },\r\n                        }}\r\n                        helperText=\"Please select your watchlist\"\r\n                        margin=\"normal\"\r\n                        variant=\"filled\"\r\n                        >\r\n                        {this.props.watchlists.map(watchlist => (\r\n                            <option key={watchlist.id} value={watchlist.id}>\r\n                            {watchlist.title}\r\n                            </option>\r\n                        ))}\r\n                    </TextField>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.props.handleClose} color=\"primary\">\r\n                    Cancel\r\n                    </Button>\r\n                    <Button onClick={() => this.handleCreate(this.props.selectedWatchlist, this.props.imdbid)} color=\"primary\" variant=\"contained\">\r\n                        + Add to list\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Card from '@material-ui/core/Card';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport AddToListBtn from './AddToListBtn';\r\nimport AddToListDialog from '../../dialogs/AddToListDialog';\r\n\r\nfunction MovieCard(props) {\r\n\r\n  return (  \r\n    <Card className=\"moviecard\" raised={true}  >\r\n        <div className=\"moviecard__poster\">\r\n        <img src={props.handlePoster(props.movie.Poster)} alt=\"movie poster\"/>\r\n        </div>\r\n        <div className=\"moviecard__movie\">\r\n            <Typography variant=\"h3\" >\r\n              {props.movie.Title} ({props.movie.Year})\r\n            </Typography>\r\n            <p className=\"moviecard__movie_genres\">{props.movie.Genre}</p><br/>\r\n            <p className=\"movieinfo\">{props.movie.Plot}</p><br/>\r\n            <span className=\"detailheading\">Director </span><span className=\"movieinfo\">{props.movie.Director}</span><br/>   \r\n            <span className=\"detailheading\">Actors </span><span className=\"movieinfo\">{props.movie.Actors}</span><br/>\r\n            <span className=\"detailheading\">Writer </span><span className=\"movieinfo\">{props.movie.Writer}</span><br/><br/>\r\n            <AddToListBtn\r\n              handleClickOpen={props.handleClickOpen}\r\n              saveMovieToDatabase={props.saveMovieToDatabase}\r\n              movie={props.movie}\r\n              variant=\"contained\" \r\n              color=\"primary\" \r\n              size=\"large\"\r\n            />\r\n            <AddToListDialog\r\n                isopen={props.isopen}\r\n                handleClickOpen={props.handleClickOpen}\r\n                handleClose={props.handleClose}\r\n                handleChange={props.handleChange}\r\n                watchlists={props.watchlists}\r\n                imdbid={props.movie.imdbID}\r\n                selectedWatchlist={props.selectedWatchlist}\r\n                saveMovieToList={props.saveMovieToList}\r\n            />\r\n        </div>\r\n    </Card>\r\n  );\r\n}\r\n\r\nMovieCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  movie: PropTypes.object.isRequired,\r\n  handleChange: PropTypes.func.isRequired,\r\n  watchlists: PropTypes.array.isRequired,\r\n  isopen: PropTypes.bool.isRequired,\r\n  handleClickOpen: PropTypes.func.isRequired,\r\n  handleClose: PropTypes.func.isRequired,\r\n  saveMovieToDatabase: PropTypes.func.isRequired,\r\n  selectedWatchlist: PropTypes.string.isRequired,\r\n  handlePoster: PropTypes.func.isRequired,\r\n  saveMovieToList: PropTypes.func.isRequired\r\n};\r\n\r\nexport default MovieCard;","import React, { Component } from 'react';\r\nimport MovieCard from './subcomp/MovieCard';\r\nimport MovieCardFull from './subcomp/MovieCardFull';\r\n\r\nclass Searchresults extends Component {\r\n    state = {\r\n        open: false,\r\n    };\r\n\r\n    handleClickOpen = () => {\r\n        this.setState({ open: true });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ open: false });\r\n    };\r\n\r\n    goSingleMovie = (imdbID) => {\r\n        this.props.getTitle(imdbID)\r\n    }\r\n\r\n    handlePoster(image) {\r\n        if(image === \"N/A\") {\r\n            return \"http://www.bsmc.net.au/wp-content/uploads/No-image-available.jpg\";\r\n        } else {\r\n            return image;\r\n        }\r\n    }\r\n\r\n    contentBuild() {\r\n        let content = '';\r\n        \r\n        if(this.props.movieSearch.search === \"True\" && this.props.singleMovie.search === false ) {\r\n            content = this.props.movieSearch.searchResults.map((movie) =>\r\n            <MovieCard \r\n                title={movie.Title}\r\n                poster={movie.Poster}\r\n                year={movie.Year}\r\n                imdbID={movie.imdbID}\r\n                goSingleMovie={this.goSingleMovie}\r\n                key={movie.imdbID}\r\n                handlePoster={this.handlePoster}\r\n            />\r\n        );\r\n\r\n        } else if (this.props.singleMovie.search === true) {\r\n            content = <MovieCardFull\r\n                        movie={this.props.singleMovie.response}\r\n                        watchlists={this.props.watchlists}\r\n                        handleChange={this.props.handleChange}\r\n                        isopen={this.state.open}\r\n                        handleClickOpen={this.handleClickOpen}\r\n                        handleClose={this.handleClose} \r\n                        saveMovieToDatabase={this.props.saveMovieToDatabase}\r\n                        selectedWatchlist={this.props.selectedWatchlist}\r\n                        handlePoster={this.handlePoster}\r\n                        saveMovieToList={this.props.saveMovieToList}\r\n            />;\r\n        }\r\n        return content;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"flexboxSearch\">\r\n                {this.contentBuild()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Searchresults;","import React, { Component } from 'react';\r\nimport Search from './search/Search';\r\nimport Watchlists from './watchlists/Watchlists';\r\nimport Recommended from './recommended/Recommended';\r\nimport Searchresults from './searchresults/Searchresults';\r\nimport '../css/App.css';\r\n\r\nclass StartPage extends Component {\r\n  state = {\r\n    open: false,\r\n  };\r\n\r\n  handleClickOpen = () => {\r\n    this.setState({ open: true });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  checkSearch() {\r\n    if(this.props.movieSearch.search === \"True\" || this.props.singleMovie.search === true) {\r\n      return  <Searchresults \r\n                movieSearch={this.props.movieSearch}\r\n                getTitle={this.props.getTitle}\r\n                saveMovieToDatabase={this.props.saveMovieToDatabase}\r\n                singleMovie={this.props.singleMovie}\r\n                watchlists={this.props.watchlists}\r\n                handleChange={this.props.handleChange}\r\n                selectedWatchlist={this.props.selectedWatchlist}\r\n                saveMovieToList={this.props.saveMovieToList}\r\n              />\r\n              \r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"mainContent\">\r\n        <Search \r\n          handleChange={this.props.handleChange}\r\n          movieSearch={this.props.movieSearch}\r\n          searchvalue={this.props.searchvalue}\r\n          getMovies={this.props.getMovies}\r\n          getTitle={this.props.getTitle}\r\n          \r\n        />\r\n        {this.checkSearch()}\r\n        <Watchlists\r\n          userID={this.props.userInfo.userID}\r\n          watchlists={this.props.watchlists}\r\n          handleChange={this.props.handleChange}\r\n          createList={this.props.createList}\r\n          getWatchlists={this.props.getWatchlists}\r\n          watchlistType={this.props.watchlistType}\r\n          isLoggedIn={this.props.isLoggedIn}\r\n        />\r\n        <Recommended\r\n          getRecommended={this.props.getRecommended}\r\n          recommendedTitles={this.props.recommendedTitles}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default StartPage;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst styles = {\r\n  avatar: {\r\n    margin: 10,\r\n  },\r\n  bigAvatar: {\r\n    margin: 10,\r\n    width: 320,\r\n    height: 320,\r\n    border: \"10px solid #FFF\",\r\n    marginTop: \"-230px\",\r\n    zIndex: 100,\r\n    boxShadow: \"2px 2px 5px 0px rgba(0,0,0,0.43)\",\r\n    alignSelf: \"center\",\r\n    textAlign: \"center\"\r\n  },\r\n};\r\n\r\nfunction ImageAvatars(props) {\r\n  const { classes } = props;\r\n  return (\r\n    <Grid container justify=\"center\" alignItems=\"center\">\r\n      <Avatar alt={props.userName} src={props.userPic} className={classes.bigAvatar} />\r\n    </Grid>\r\n  );\r\n}\r\n\r\nImageAvatars.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  userPic: PropTypes.string.isRequired,\r\n  userName: PropTypes.string.isRequired,\r\n\r\n};\r\n\r\nexport default withStyles(styles)(ImageAvatars);","import React, { Component } from 'react';\r\nimport Div from '../../styles/search';\r\nimport Avatar from './Avatar';\r\n\r\nclass ProfileImage extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Div profile=\"true\">\r\n        </Div>\r\n        <Avatar \r\n          userPic={this.props.userInfo.picture}  \r\n          userName={this.props.userInfo.name}\r\n        />\r\n  \r\n      </div>\r\n    );  \r\n  }\r\n\r\n}\r\n\r\n\r\nexport default ProfileImage;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst styles = {\r\n  card: {\r\n    maxWidth: 600,\r\n    margin: \"0 auto\",\r\n    marginTop: 20,\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 42,\r\n    fontWeight: \"700\",\r\n    marginBottom: \"5px\",\r\n    lineHeight: 1.2\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n  info: {\r\n    fontSize: 24,\r\n    lineHeight: 1.2,\r\n    fontWeight: \"100\"\r\n  },\r\n  bold: {\r\n    fontWeight: 700,\r\n  }\r\n};\r\n\r\nfunction ProfileCard(props) {\r\n  const { classes } = props;\r\n\r\n  return (\r\n    <Card className={classes.card} raised={true}>\r\n      <CardContent>\r\n        <Typography className={classes.title} color=\"default\" gutterBottom>\r\n          {props.name}\r\n        </Typography>\r\n        <Typography component=\"p\" className={classes.info} align=\"center\"> \r\n          Total lists <span className={classes.bold}>{props.lists}</span><br/>\r\n          Popular Director xx <br/>\r\n          Popular Actor xx <br/>\r\n          Popular Genres xx <br/>\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nProfileCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  lists: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(ProfileCard);","import React, { Component } from 'react';\r\nimport ProfileImage from './profilepage/ProfileImage';\r\nimport ProfileCard from './profilepage/ProfileCard';\r\nimport Watchlists from './watchlists/Watchlists'\r\nimport '../css/App.css';\r\n\r\nclass ProfilePage extends Component {\r\n  \r\n  componentDidMount() {\r\n      this.props.switchWatchlistType(\"profilepage\")\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"mainContent\">\r\n        <ProfileImage\r\n          userInfo={this.props.userInfo}\r\n        />\r\n        <ProfileCard\r\n          name={this.props.userInfo.name}\r\n          lists={this.props.watchlists.length}\r\n        />\r\n        <Watchlists\r\n          watchlists={this.props.watchlists}\r\n          handleChange={this.props.handleChange}\r\n          createList={this.props.createList}\r\n          getWatchlists={this.props.getWatchlists}\r\n          userID={this.props.userInfo.userID}\r\n          switchWatchlistType={this.props.switchWatchlistType}\r\n          fullWatchlist={this.props.fullWatchlist}\r\n          activeWatchlist={this.props.activeWatchlist}\r\n          watchlistType={this.props.watchlistType}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default ProfilePage;\r\n","import React, { Component } from 'react';\r\nimport Navigation from './components/navigation/Navigation';\r\nimport Footer from './components/footer/Footer'\r\nimport StartPage from './components/StartPage';\r\nimport ProfilePage from './components/ProfilePage';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport './css/App.css';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n      this.state = {\r\n        user: {\r\n          isLoggedIn: 'false',\r\n          userID: '',\r\n          name: '',\r\n          email: '',\r\n          picture: ''\r\n        },\r\n        movies: {\r\n          search: '',\r\n          totalResults: '',\r\n          searchResults: ''\r\n        },\r\n        movie: {\r\n          search: false,\r\n          response: {\r\n          },\r\n        },\r\n        searchvalue: \"Search for movie or series\",\r\n        watchlists: [\r\n          {\r\n            created: \"2018-12-14 11:31:30\",\r\n            description: \"A collection of movies to watch\",\r\n            movies: [],\r\n            title: \"Movies to watch\",\r\n            userid: \"1\"\r\n          }\r\n        ],\r\n        recommended: false,\r\n        listname: \"Movies to watch\",\r\n        listdescription: \"A collection of movies to watch\", \r\n        selectedwatchlist: \"N/A\",\r\n        watchlistType: \"startpage\",\r\n        fullwatchlist: \"\",\r\n      };\r\n  }\r\n\r\n  switchWatchlistType = (type) => {\r\n    this.setState({\r\n      watchlistType: type\r\n    })\r\n  }\r\n\r\n  fullWatchlist = (id) => {\r\n    this.setState({\r\n      fullwatchlist: id\r\n    })\r\n  }\r\n\r\n  handleChange = searchvalue => event => {\r\n    this.setState({\r\n      [searchvalue]: event.target.value,\r\n    });\r\n  };\r\n\r\n  createList = () => {\r\n      let data = {\r\n        listname: this.state.listname,\r\n        listdescription: this.state.listdescription,\r\n        userID: this.state.user.userID,\r\n        movies: [],\r\n      }     \r\n      return fetch('http://localhost/php/create.php', {\r\n        method: \"POST\",\r\n        mode: \"no-cors\",\r\n        body: JSON.stringify(data)\r\n        })\r\n        .then((response) => {\r\n          this.getWatchlists(this.state.user.userID)\r\n        })\r\n        .catch((error) => {\r\n          console.error(error);\r\n      })\r\n  }\r\n\r\n  responseFacebook = (response) => {\r\n      this.setState({\r\n        user: {\r\n          isLoggedIn: true,\r\n          userID: response.id,\r\n          name: response.name,\r\n          email: response.email,\r\n          picture: response.picture.data.url,\r\n        },\r\n      })\r\n      this.getWatchlists(this.state.user.userID)\r\n  }\r\n\r\n  getMovies = (value) => {\r\n    let baseUrl = \"http://www.omdbapi.com/\";\r\n    let key = \"apikey=acfee4fa\";\r\n\r\n    fetch(baseUrl + \"?s=\" + value + \"&plot=short&\" + key)\r\n    .then((response) => response.json())\r\n    .then((response) => {\r\n      this.setState({\r\n        movie: {\r\n          search: false\r\n        },\r\n        movies: {\r\n          search: response.Response,\r\n          totalResults: response.totalResults,\r\n          searchResults: response.Search\r\n        },\r\n      });\r\n    })\r\n    .catch((error) => {\r\n      console.log(error)\r\n    })\r\n  }\r\n\r\n  getTitle = (imdbid) => {\r\n    console.log(\"getting title\");\r\n    let baseUrl = \"http://www.omdbapi.com/\";\r\n    let key = \"apikey=acfee4fa\";\r\n    \r\n    fetch(baseUrl + \"?i=\" + imdbid + \"&plot=full&\" + key)\r\n    .then((response) => response.json())\r\n    .then((response) => {\r\n      console.log(response)\r\n      this.setState({\r\n        movie: {\r\n          search: true,\r\n          response: response\r\n        },\r\n      });\r\n    })\r\n    .catch((error) => {\r\n      console.log(error)\r\n    })\r\n  }\r\n\r\n  saveMovieToDatabase = (imdbid, title, year, rated, released, runtime, genre, director, writer, actors, plot, language, country, awards, poster, ratings, metascore, imdbrating, imdbvotes, type, dvd, boxoffice, production, website, trailer) => {\r\n\r\n    let movie = {\r\n      imdbid: imdbid,\r\n      title: title,\r\n      year: year,\r\n      rated: rated,\r\n      released: released,\r\n      runtime: runtime,\r\n      genre: genre,\r\n      director: director,\r\n      writer: writer,\r\n      actors: actors,\r\n      plot: plot,\r\n      language: language,\r\n      country: country,\r\n      awards: awards,\r\n      poster: poster,\r\n      ratings: ratings,\r\n      metascore: metascore,\r\n      imdbrating: imdbrating,\r\n      imdbvotes: imdbvotes,\r\n      type: type,\r\n      dvd: dvd,\r\n      boxoffice: boxoffice,\r\n      production: production,\r\n      website: website,\r\n      trailer: trailer,\r\n    }\r\n\r\n    return fetch('http://localhost/php/createmovie.php', {\r\n        method: \"POST\",\r\n        mode: \"no-cors\",\r\n        body: JSON.stringify(movie)\r\n        })\r\n        .then((response) => {\r\n          console.log(movie);\r\n        })\r\n        .catch((error) => {\r\n          console.error(error);\r\n    })\r\n  }\r\n\r\n  saveMovieToList = (listid, imdbid) => {\r\n    let damovie = {\r\n      watchlistid: listid,\r\n      imdbid: imdbid\r\n    }\r\n  \r\n    return fetch('http://localhost/php/savetolist.php', {\r\n      method: \"POST\",\r\n      mode: \"no-cors\",\r\n      body: JSON.stringify(damovie)\r\n      })\r\n      .then((response) => {\r\n        this.getWatchlists(this.state.user.userID);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n    })\r\n  }\r\n\r\n  getWatchlists = (userid) => {\r\n      /* Fetching all watchlists from database based on userID */\r\n      \r\n      fetch('http://localhost/php/getwatchlists.php?userID=' + userid)\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n          this.setState({\r\n            watchlists: response,\r\n          })\r\n          setTimeout(()=>{\r\n            if(this.state.watchlists === null) {\r\n              this.createList()\r\n            }  \r\n          }, 500 )\r\n      })\r\n      .catch((error) => {\r\n          console.error(error);\r\n      })\r\n  }\r\n\r\n  getRecommended = () => {\r\n    fetch('http://localhost/php/getrecommended.php')\r\n    .then((response) => response.json())\r\n    .then((response) => {\r\n        this.setState({\r\n          recommended: response,\r\n        })\r\n    })\r\n    .catch((error) => {\r\n        console.error(error);\r\n    })\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.getRecommended();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Navigation\r\n          responseFacebook={this.responseFacebook}\r\n          componentClicked={this.componentClicked}\r\n          user={this.state.user}\r\n        />\r\n        <Router>\r\n          <div className=\"appMain\">\r\n            <Route path=\"/\" render={(props) => \r\n            <StartPage {...props} \r\n              movieSearch={this.state.movies}\r\n              singleMovie={this.state.movie}\r\n              handleChange={this.handleChange}\r\n              searchvalue={this.state.searchvalue}\r\n              getMovies={this.getMovies}\r\n              getTitle={this.getTitle}\r\n              userInfo={this.state.user}\r\n              isLoggedIn={this.state.user.isLoggedIn}\r\n              watchlists={this.state.watchlists}\r\n              createList={this.createList}\r\n              getWatchlists={this.getWatchlists}\r\n              saveMovieToDatabase={this.saveMovieToDatabase}\r\n              selectedWatchlist={this.state.selectedwatchlist}\r\n              saveMovieToList={this.saveMovieToList}\r\n              recommendedTitles={this.state.recommended}\r\n              getRecommended={this.getRecommended}\r\n              watchlistType={this.state.watchlistType}\r\n            />} exact  />\r\n\r\n            <Route path=\"/ProfilePage\" render={(props) => \r\n            <ProfilePage {...props} \r\n              userInfo={this.state.user}\r\n              isLoggedIn={this.state.user.isLoggedIn}\r\n              watchlists={this.state.watchlists}\r\n              createList={this.createList}\r\n              handleChange={this.handleChange}\r\n              getWatchlists={this.getWatchlists}\r\n              switchWatchlistType={this.switchWatchlistType}\r\n              watchlistType={this.state.watchlistType}\r\n              fullWatchlist={this.fullWatchlist}\r\n              activeWatchlist={this.state.fullwatchlist}\r\n            />}/>\r\n          </div>\r\n        </Router>\r\n        <Footer/>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n\r\n              // Execute callback\r\n              if (config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core';\r\nimport blue from '@material-ui/core/colors/blue';\r\nimport green from '@material-ui/core/colors/green';\r\n\r\nconst defaultTheme = createMuiTheme({ \r\n    palette: {\r\n        primary: blue,\r\n        secondary: green\r\n\r\n    }, \r\n    typography: {\r\n        useNextVariants: true,\r\n    } \r\n});\r\n\r\nconst { breakpoints } = defaultTheme;\r\n\r\nconst theme = {\r\n...defaultTheme,\r\n    overrides: {\r\n        MuiTypography: {\r\n            h1: {\r\n                fontSize: \"3.5rem\",\r\n                color: \"#2b2b2b\",\r\n                [breakpoints.down(\"xs\")]: {\r\n                fontSize: \"2.2rem\"\r\n                }\r\n            },\r\n            h2: {\r\n                fontSize: \"3.1rem\",\r\n                color: \"#2b2b2b\",\r\n                [breakpoints.down(\"xs\")]: {\r\n                fontSize: \"1.7rem\"\r\n                }\r\n            },\r\n        },\r\n    }\r\n}\r\n\r\nReactDOM.render(\r\n    <MuiThemeProvider theme={theme}>\r\n        <App />\r\n    </MuiThemeProvider>, \r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}